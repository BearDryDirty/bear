{
    "link": [
        {"url": "https://icomoon.io/","name": "font图标下载-icomoon"},
        {"url": "http://www.iconfont.cn/","name": "font图标下载-iconfont"},
        {"url": "http://www.easyicon.net/","name": "图标下载-easyicon"},
        {"url": "http://www.qiuziti.com/","name": "字体下载-qiuziti"},
        {"url": "http://www.60logo.com/","name": "logo下载-60logo"},
        {"url": "http://instantlogosearch.com/","name": "logo下载-instantlogosearch"},
        {"url": "http://bigjpg.com/","name": "图片无损放大-bigjpg"},
        {"url": "https://color.adobe.com/zh/explore/newest/?time=all","name": "配色-color"},
        {"url": "http://www.nipic.com/index.html","name": "昵图网"},
        {"url": "http://cli.im/?jdfwkey=qvrim1","name": "二维码生成"},
        {"url": "https://webgradients.com/","name": "css渐变色"},
        {"url": "http://tool.lu/css/","name": "css格式化"},
        {"url": "http://www.css88.com/jqapi-1.9/","name": "JQ Api"},
        {"url": "http://www.imooc.com/","name": "慕课网"},
        {"url": "http://699pic.com/","name": "摄图网"},
        {"url": "http://echarts.baidu.com/index.html","name": "图表-echars"},
        {"url": "http://gj.3gwen.com/tpbase64.html?kbl=","name": "Base64转换"},
        {"url": "http://fanyi.baidu.com/","name": "百度翻译"},
        {"url": "https://github.com/","name": "GitHub"},
        {"url": "https://v3.bootcss.com/components/","name": "Bootstrap"},
        {"url": "https://cn.vuejs.org/v2/api/","name": "Vue.js"},
        {"url": "http://tool.oschina.net/","name": "在线工具"},
        {"url": "http://www.daqianduan.com/","name": "大前端"},
        {"url": "http://www.jq22.com/","name": "JQ22"},
        {"url": "https://www.qdfuns.com/","name": "前端网"}
    ],
    "note": [
        {
            "title": "Atom同步设置工具",
            "subTitle": "Atom sync-settings",
            "main": "<p><span style='font-size: 22px; font-weight: bold;'>Atom sync-settings（同步设置工具）</span></p><p><a target='_blank' href='https://atom.io/packages/sync-settings'><span style='color: rgb(0, 56, 132);'>https://atom.io/packages/sync-settings</span></a></p><p><span style='font-size: 18px; font-family: Verdana; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255);'>使用方法(配置完毕后)</span></p><ul class=' list-paddingleft-2'><li><p><span style='background-color: rgb(255, 255, 255);'>在文档编辑页面，按下全局命令搜索面板(Ctrl+shift+p)</span></p></li><li><p><span style='background-color: rgb(255, 255, 255);'>搜索sync- ，会有可选项</span></p></li></ul><ul class=' list-paddingleft-2'><li><p><span style='background-color: rgb(255, 255, 255);'>sync-settings:backup &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;– 这条命令是备份当前的配置；</span></p></li><li><p><span style='background-color: rgb(255, 255, 255);'>sync-settings:restore &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;– 这条命令是恢复配置，是直接覆盖的；</span></p></li><li><p><span style='background-color: rgb(255, 255, 255);'>sync-settings:view-backup &nbsp; &nbsp; &nbsp; &nbsp;– 这条是当你执行备份后到线上查询你的备份的，也就是到你的 gist code 里面；</span></p></li><li><p><span style='background-color: rgb(255, 255, 255);'>sync-settings:check-backup &nbsp; &nbsp; &nbsp; – 这条是查询最后一次是否正常；</span></p></li></ul><p><br/></p>"
        },
        {
            "title": "Vue",
            "subTitle": "axios.js",
            "main": "<p><span style='font-weight: bold;'>//页面加载完成后运行post</span></p><p>    mounted(){</p><p>    this.post()</p><p>    },</p><p><span style='font-weight: bold;'>//当请求成功时，会执行 .then，否则执行 .catch</span></p><p><span style='font-weight: bold;'>//这两个回调函数都有各自独立的作用域，如果直接在里面访问 this，无法访问到 Vue 实例</span></p><p><span style='font-weight: bold;'>//这时只要添加一个&nbsp;.bind(this)&nbsp;就能解决这个问题</span></p><p>    methods:{</p><p>    post:function(){</p><p>    axios.get(&#39;data/data.json&#39;)</p><p>    .then(function (response) {</p><p>    console.log(response.data.link);</p><p>    this.link = response.data.link</p><p>    }.bind(this))</p><p>    .catch(function (error) {</p><p>    console.log(error);</p><p>    });</p><p>    }</p><p>    },</p><p><br/></p>"
        },
        {
            "title": "Html字体图标",
            "subTitle": "font-face",
            "main": "<p>    http://icomoon.io&nbsp; &nbsp;免费图标下载</p><p>    @font-face{</p><p>    font-family: &#39;icon&#39;;</p><p>    src: url(&#39;font.eot&#39;);&nbsp; &nbsp;</p><p>    &nbsp; &nbsp; &nbsp; &nbsp;url(&#39;font.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;)</p><p>    &nbsp; &nbsp; &nbsp; &nbsp;url(&#39;font.woff&#39;) format(&#39;woff&#39;);</p><p>    &nbsp; &nbsp; &nbsp; &nbsp;url(&#39;font.ttf&#39;) format(&#39;truetype&#39;);</p><p>    &nbsp; &nbsp; &nbsp; &nbsp;url(&#39;font.svg&#39;) format(&#39;svg&#39;);</p><p>    }</p><p><br/></p><p>    .font{</p><p>    font-family:&#39;icon&#39;;</p><p>    -webkit-font-smoothing:antialiased;&nbsp;</p><p>    -moz-osx-font-smoothing:grayscale;&nbsp; &nbsp;</p><p>    }</p><p><br/></p>"
        },
        {
            "title": "Ajax",
            "subTitle": "跨域",
            "main": "<p><span style='font-size: 13px; color: rgb(68, 68, 68); font-weight: bold;'>三个条件同时满足就会产生跨域问题</span></p><ul class=' list-paddingleft-2'><li><p>            浏览器限制</p></li><li><p>            请求是跨域的</p></li><li><p>            请求类型是XHR(XmlHttpRequest)</p></li></ul><p><span style='font-weight: bold;'>解决思路</span></p><ul class=' list-paddingleft-2'><li><p>            浏览器 （客户端改动，需要每个人客户端改动）</p></li><li><p>            XHR &nbsp; &nbsp; &nbsp; (发送类型只要不是XHR，如JSONP)</p></li><li><p>            跨域 &nbsp; &nbsp; （1.被调用方修改代码支持跨域 &nbsp;2.隐藏跨域，通过代理发送请求）</p></li></ul><p><span style='font-weight: bold;'>JSONP如何解决跨域</span></p><p>    JSONP是利用script标签请求资源可以跨域，返回js脚本，需要后台处理为json</p><p><span style='font-weight: bold;'>JSONP弊端</span></p><ul class=' list-paddingleft-2'><li><p>            服务器需要改动代码支持</p></li><li><p>            只支持GET</p></li><li><p>            发送的不是XHR请求（不支持异步）</p></li></ul><p><br/></p>"
        }
    ]
}
